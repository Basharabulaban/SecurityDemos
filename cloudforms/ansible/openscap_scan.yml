---
# This will run openscap scans if a host is registered to Satellite 6, and assigned a policy
- hosts: all
  gather_facts: false

  vars:
    manageiq_user: admin
    manageiq_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          32343765326564333435653736376236303139666364343432313831326337386433356361373361
          3830633930373435366632343039353239326132376537630a653031636261353663353336373665
          33346534656134343765353434646237666164393766353364626266353332323239623565343063
          6432363234323161390a323061633334653137363162373032326338666639613239623664353030
          3863
    manageiq_validate_certs: false
    policy_id:
    category: scap_compliant
    tag: "false"
    vm_href_slug:
    satellite_user: admin
    satellite_pass: !vault |
              $ANSIBLE_VAULT;1.1;AES256
              32343765326564333435653736376236303139666364343432313831326337386433356361373361
              3830633930373435366632343039353239326132376537630a653031636261353663353336373665
              33346534656134343765353434646237666164393766353364626266353332323239623565343063
              6432363234323161390a323061633334653137363162373032326338666639613239623664353030
              3863
    satellite_hostname: sat6.summit.example.com
    verbose: false

  pre_tasks:
    - name: logging manageiq object
      debug: var=manageiq
      when: manageiq is defined

  tasks:
    - name: Log policy_id
      debug:
        var: policy_id
      when: verbose and policy_id is defined

    - name: Configure puppet client
      command: "puppet agent -t"
      ignore_errors: true
      register: config_puppet_output

    - name: Log config_puppet_output
      debug:
        var: config_puppet_output
      when: verbose

    - name: OpenScap scan
      shell: foreman_scap_client '{{ policy_id }}'
      ignore_errors: no
      register: command_result
      failed_when: "'FAILED' in command_result.stderr"

    - name: Log command_result
      debug:
        var: command_result
      when: verbose

    - name: Lookup Compliance Policy Name
      uri:
        url: "https://{{ satellite_hostname }}/api/v2/compliance/policies/{{ policy_id }}"
        method: GET
        validate_certs: "{{ manageiq_validate_certs }}"
        user: "{{ satellite_user }}"
        password: "{{ satellite_pass }}"
        status_code: 200
      register: lookup_policy_name_output

    - name: Log lookup_policy_name_output
      debug:
        var: lookup_policy_name_output
      when: verbose

    - name: Log lookup_policy_name_output
      debug:
        var: lookup_policy_name_output.resuls
      when: verbose

    - name: Assign tag to VM
      uri:
        url: "{{ manageiq.api_url }}/api/{{ vm_href_slug }}/tags"
        method: POST
        body:
          action: assign
          resources:
            - category: "{{ category }}"
              name: "{{ tag }}"
        body_format: json
        validate_certs: "{{ manageiq_validate_certs }}"
        user: "{{ manageiq_user }}"
        password: "{{ manageiq_password }}"
        status_code: 200
      register: assign_vmtag_output

    - name: Log assign_vmtag_output
      debug:
        var: assign_vmtag_output
      when: verbose
