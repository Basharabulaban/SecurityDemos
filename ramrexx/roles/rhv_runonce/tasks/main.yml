---
- name: Set satellite_hostname
  set_fact:
    satellite_hostname: sat6.example.com
    activation_key: rhel7beta
    organization: Default_Organization

- name: Regiser with Satellite
  shell: "{{ item }}"
  register: sat_register_output
  with_items:
    - "rpm -Uvh http://{{ satellite_hostname }}/pub/katello-ca-consumer-latest.noarch.rpm"
    - "subscription-manager register --org={{ organization }} --activationkey={{ activation_key }}"
    - subscription-manager repos --enable rhel-7-server-satellite-tools-6.3-rpms --enable rhel-7-server-extras-beta-rpms

- name: Log sat_register_output
  debug:
    var: sat_register_output
  when: verbose and sat_register_output is defined

- name: Install packages
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - katello-agent
    - scap-security-guide
    - puppet
    - rubygem-foreman_scap_client
    - ansible
    - redhat-access-insights

- name: Enable Katello Agent
  service:
    name: goferd
    enabled: true
    state: started

- name: Configure Red Hat Access Insights and Puppet
  command: "{{ item }}"
  ignore_errors: true
  with_items:
    - "redhat-access-insights --register"
    - "puppet config set --section agent server {{ satellite_hostname}}"
    - "puppet config set --section agent ca_server {{ satellite_hostname}}"
    - "find /var/lib/puppet/ssl -name {{ inventory_hostname }}.pem -delete"
    - "puppet agent --test --tags no_such_tag --waitforcert 10"
    - "puppet agent -t"

- name: Start Puppet Daemon
  service:
    name: puppet
    state: started
    enabled: true

- name: Insert ignore_errors into plays
  replace:
    path: "/usr/share/scap-security-guide/ansible/{{ scap_profile_name }}.yml"
    regexp: '(^\s.*- name:.*)'
    replace: '\1\n      ignore_errors: true'
    backup: yes
  register: replace_output

- name: Log replace_output
  debug:
    var: replace_output
  when: verbose and replace_output is defined

- name: Run SCAP remediation playbook
  shell: "ansible-playbook -i localhost, -c local /usr/share/scap-security-guide/ansible/{{ scap_profile_name }}.yml"
  register: scap_output
  when: scap_profile_name is defined

- name: Log scap_output
  debug:
    var: scap_output
  when: verbose and scap_output is defined

# Add your own plays here
