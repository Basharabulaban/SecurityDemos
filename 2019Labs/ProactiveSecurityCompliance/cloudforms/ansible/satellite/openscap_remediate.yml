---
- name: OpenSCAP Remediate
  hosts: all
  gather_facts: false

  vars:
    policy_id: 5
<<<<<<< HEAD
    satellite_hostname: sat64.example.com
=======
    satellite_hostname: sat64.summit.example.com
>>>>>>> 95f6ed63800d8ac15b16ff2b565f8ff39c69732a
    verbose: false

  tasks:
    - name: Puppet run to get foreman_scap_client config
      shell: puppet agent -t
      ignore_errors: true
      register: puppet_agent_output

    - name: Log puppet_agent_output
      debug:
        var: puppet_agent_output
      when: verbose

    - name: get profile
      shell: "grep -A5 '{{ policy_id }}': /etc/foreman_scap_client/config.yaml| grep profile | awk '{print $2}'| sed -e 's/^[ \t]*//'"
      register: profile_contents

    - name: Log profile_contents
      debug:
        var: profile_contents
      when: verbose

    - name: get download path
      shell: grep -A5 '{{policy_id }}'':' /etc/foreman_scap_client/config.yaml|grep download_path |awk '{print $2}'| sed -e "s/[' \t]*//g"
      register: download_contents

    - name: Log download_contents
      debug:
        var: download_contents
      when: verbose

    - name: download profile
      shell: "curl -X GET -s --cert /etc/pki/consumer/cert.pem --key /etc/pki/consumer/key.pem -k {{ sat_server }}{{ download_contents.stdout }} -k --output /tmp/content"
      ignore_errors: yes
      register: curl_result
      failed_when: "'FAILED' in curl_result.stderr"

    - name: Log curl_result
      debug:
        var: curl_result
      when: verbose

    - name: Install openscap-utils
      yum:
        name: '{{ item }}'
        state: latest
      register: yum_output
      with_items:
        - openscap-scanner
        - scap-security-guide

    - name: Log yum_output
      debug:
        var: yum_output
      when: verbose

    - name: Download ssg-rhel7-ds-custom.xml from the {{ satellite_hostname }}
      get_url:
        url: "https://{{ satellite_hostname }}/pub/ssg-rhel7-ds-custom.xml"
        dest: /usr/share/xml/scap/ssg/content/ssg-rhel7-ds-custom.xml
      register: get_url_result
      until: get_url_result | succeeded
      retries: 10
      delay: 1
      ignore_errors: yes

    - name: remediate openscap
      shell: "oscap xccdf eval  --remediate --profile '{{ profile_contents.stdout }}' /usr/share/xml/scap/ssg/content/ssg-rhel7-ds-custom.xml"
      ignore_errors: yes
      register: remediate_result
      failed_when: "'FAILED' in remediate_result.stderr"

    - name: Log remediate_result
      debug:
        var: remediate_result
      when: verbose

    - name: Remove contents file
      file:
       path: /tmp/content
       state: absent

    - name: Update Satellite compliance results
      shell: foreman_scap_client '{{ policy_id }}'
      register: compliance_results

    - name: Log compliance_results
      debug:
        var: compliance_results
      when: verbose
