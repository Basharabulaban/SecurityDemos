---
- hosts: all

  become: yes
  become_method: sudo
  become_user: lab-user

  vars:
    LABS_LOCAL: "/home/lab-user/labs_data"
    LABS_CONTENT_PART: "2019Labs/CustomSecurityContent/documentation"
    LAB_2_LABEL: "2_content_creation"
    CACC_LOCAL: "/home/lab-user/complianceAsCode"
    LABS_ROOT: "/home/lab-user/labs"

  tasks:
  - name: Clone the Labs Git repository
    git:
      repo: 'https://github.com/RedHatDemos/SecurityDemos.git'
      dest: "{{ LABS_LOCAL }}"

  - name: Clone the CaC/c Git repository
    git:
      repo: 'https://github.com/ComplianceAsCode/content.git'
      dest: "{{ CACC_LOCAL }}"

  - name: Generate SSH keys
    shell: ssh-keygen -b 2048 -t rsa -f /home/lab-user/.ssh/id_rsa -q -N ""
    args:
      creates: /home/lab-user/.ssh/id_rsa

  - name: Set root's .ssh directory permission
    file:
      state: directory
      mode: "u=rwx"
      path: /root/.ssh

  - name: Copy the RSA key pair to the root user
    copy:
      src: /home/lab-user/.ssh/{{ item }}
      remote_src: yes
      dest: /root/.ssh/
      mode: "u=rw"
    loop:
     - id_rsa
     - id_rsa.pub
    become_user: root

  - name: Build a podman image for testing
# TODO: The RHEL image doesn't work with subscription, even if the host is subscribed.
# TODO: Building as the root user, as port binding requires root privileges, may not be the case for RHEL8 GA podman.
# shell: 'podman build --build-arg "CLIENT_PUBLIC_KEY=$(cat /home/lab-user/.ssh/id_rsa.pub)" -t ssg_test_suite -f test_suite-rhel .'
    shell: 'podman build --build-arg "CLIENT_PUBLIC_KEY=$(cat /root/.ssh/id_rsa.pub)" -t ssg_test_suite -f test_suite-fedora .'
    args:
      chdir: "{{ CACC_LOCAL }}/Dockerfiles"
    when: ansible_distribution == 'RedHat' and ansible_distribution_version.split(".")[0] == "8"
    become_user: root

  - name: Creates directory for Lab 2
    file:
      path: "{{ LABS_ROOT }}/{{ LAB_2_LABEL }}"
      state: directory

  - name: Clone the CaC/c Git for Lab 2
    git:
      repo: "{{ CACC_LOCAL }}"
      version: 'v0.1.43'
      dest: "{{ LABS_ROOT }}/{{ LAB_2_LABEL }}/complianceAsCode"

  - name: Copy the lab 2 documentation to the working directory
    copy:
      src: "{{ LABS_LOCAL }}/{{ LABS_CONTENT_PART }}/{{ LAB_2_LABEL }}"
      dest: "{{ LABS_ROOT }}/{{ LAB_2_LABEL }}/documentation"
